{"ast":null,"code":"var _jsxFileName = \"/Users/felipelima/Sandbox/udacity/nd0191-c1-myreads/starter/src/ReadStatus.js\";\n// import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadStatus = ({\n  books,\n  setBooks\n}) => {\n  const shelves = [{\n    key: \"currentlyReading\",\n    title: \"Currently Reading\"\n  }, {\n    key: \"wantToRead\",\n    title: \"Want to Read\"\n  }, {\n    key: \"read\",\n    title: \"Read\"\n  }];\n\n  const handleShelfChange = async (event, bookToUpdate, setBooks) => {\n    const newShelf = event.target.value;\n\n    try {\n      const updatedBook = await BooksAPI.update(bookToUpdate, newShelf);\n      const updatedBooks = books.map(book => book.id === updatedBook.id ? { ...book,\n        shelf: newShelf\n      } : book);\n      setBooks(updatedBooks);\n    } catch (error) {\n      console.error(\"Error updating book shelf: \", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyReads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-content\",\n      children: shelves.map(shelf => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: shelf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: books.filter(book => book.shelf === shelf.key).map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"book\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"book-cover\",\n                style: {\n                  width: 128,\n                  height: 193,\n                  backgroundImage: `url(${book.imageLinks.thumbnail})`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"book-shelf-changer\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: book.shelf,\n                  onChange: event => handleShelfChange(event, book),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"none\",\n                    disabled: true,\n                    children: \"Move to...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 27\n                  }, this), shelves.map(shelf => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: shelf.key,\n                    children: shelf.title\n                  }, shelf.key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"none\",\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-title\",\n              children: book.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book-authors\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Author: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)]\n          }, book.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, shelf.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"open-search\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"search\",\n        className: \"toggle-search\",\n        children: \"Add a book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ReadStatus;\nReadStatus.propTypes = {\n  books: PropTypes.array.isRequired\n};\nexport default ReadStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadStatus\");","map":{"version":3,"sources":["/Users/felipelima/Sandbox/udacity/nd0191-c1-myreads/starter/src/ReadStatus.js"],"names":["Link","PropTypes","BooksAPI","ReadStatus","books","setBooks","shelves","key","title","handleShelfChange","event","bookToUpdate","newShelf","target","value","updatedBook","update","updatedBooks","map","book","id","shelf","error","console","filter","width","height","backgroundImage","imageLinks","thumbnail","authors","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["// import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nconst ReadStatus = ({ books, setBooks }) => {\n  const shelves = [\n    { key: \"currentlyReading\", title: \"Currently Reading\" },\n    { key: \"wantToRead\", title: \"Want to Read\" },\n    { key: \"read\", title: \"Read\" },\n  ];\n\n  const handleShelfChange = async (event, bookToUpdate, setBooks) => {\n    const newShelf = event.target.value;\n    try {\n      const updatedBook = await BooksAPI.update(bookToUpdate, newShelf);\n      const updatedBooks = books.map((book) =>\n        book.id === updatedBook.id ? { ...book, shelf: newShelf } : book\n      );\n      setBooks(updatedBooks);\n    } catch (error) {\n      console.error(\"Error updating book shelf: \", error);\n    }\n  };\n\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        {shelves.map((shelf) => (\n          <div key={shelf.key} className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n            <div className=\"bookshelf-books\"></div>\n            <ol className=\"books-grid\">\n              {books\n                .filter((book) => book.shelf === shelf.key)\n                .map((book) => (\n                  <li key={book.id} className=\"book\">\n                    <div className=\"book-top\">\n                      <div\n                        className=\"book-cover\"\n                        style={{\n                          width: 128,\n                          height: 193,\n                          backgroundImage: `url(${book.imageLinks.thumbnail})`,\n                        }}\n                      ></div>\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          value={book.shelf}\n                          onChange={(event) => handleShelfChange(event, book)}\n                        >\n                          <option value=\"none\" disabled>\n                            Move to...\n                          </option>\n                          {shelves.map((shelf) => (\n                            <option key={shelf.key} value={shelf.key}>\n                              {shelf.title}\n                            </option>\n                          ))}\n                          <option value=\"none\">None</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    <div className=\"book-authors\">\n                      <p>Author: {book.authors}</p>\n                    </div>\n                  </li>\n                ))}\n            </ol>\n          </div>\n        ))}\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"search\" className=\"toggle-search\">\n          Add a book\n        </Link>\n      </div>\n    </div>\n  );\n};\nReadStatus.propTypes = {\n  books: PropTypes.array.isRequired,\n};\n\nexport default ReadStatus;\n"]},"metadata":{},"sourceType":"module"}