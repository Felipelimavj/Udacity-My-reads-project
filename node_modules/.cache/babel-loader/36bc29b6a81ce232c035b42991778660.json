{"ast":null,"code":"var _jsxFileName = \"/Users/felipelima/Sandbox/udacity/nd0191-c1-myreads/starter/src/BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\"; // import * as BooksAPI from \"./BooksAPI\";\n// const BookSearch = ({ onBack }) => {\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const handleSearchInputChange = (event) => {\n//     setSearchQuery(event.target.value);\n//   };\n//   const handleSearchSubmit = (event) => {\n//     event.preventDefault();\n//     // Perform book search based on searchQuery\n//     // Update search results\n//   };\n//   return (\n//     <div className=\"search-books\">\n//       <div className=\"search-books-bar\">\n//         <button className=\"close-search\" onClick={onBack}>\n//           Close\n//         </button>\n//         <div className=\"search-books-input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search by title, author, or ISBN\"\n//             onChange={handleSearchInputChange}\n//             value={searchQuery}\n//           />\n//           <button onClick={handleSearchSubmit}>Search</button>\n//         </div>\n//       </div>\n//       <div className=\"search-books-results\">\n//         <ol className=\"books-grid\"></ol>\n//       </div>\n//     </div>\n//   );\n// };\n// export default BookSearch;\n// const BookSearch = ({ handleShelfChange, shelves }) => {\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [searchResult, setSearchResult] = useState([]);\n//   const onSearchQueryChange = async (event) => {\n//     const query = event.target.value;\n//     setSearchQuery(query);\n//     if (query.trim() === \"\") {\n//       setSearchResult([]);\n//     }\n//     try {\n//       const searchResults = await BooksAPI.search(query, 10);\n//       setSearchResult(searchResults);\n//     } catch (error) {\n//       console.error(\"Error searching books: \", error);\n//       setSearchResult([]);\n//     }\n//   };\n//   const handleSearchSubmit = (event) => {\n//     event.preventDefault();\n//   };\n//   return (\n//     <div>\n//       <div className=\"search-books-bar\">\n//         <div className=\"close-search-page\">\n//           <Link to=\"/\" className=\"close-search\">\n//             close\n//           </Link>\n//         </div>\n//         <div className=\"search-books-input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search by title, author, or ISBN\"\n//             value={searchQuery}\n//             onChange={onSearchQueryChange}\n//           />\n//           <button onClick={handleSearchSubmit}>Search</button>\n//         </div>\n//         <div className=\"search-books-results\">\n//           <ol className=\"books-grid\">\n//             {searchResult.map((book) => (\n//               <li key={book.id}>\n//                 <div className=\"book\">\n//                   <div className=\"book-top\">\n//                     <div\n//                       className=\"book-cover\"\n//                       style={{\n//                         width: 128,\n//                         height: 193,\n//                         backgroundImage: `url(${book.imageLinks.thumbnail})`,\n//                       }}\n//                     ></div>\n//                     <div className=\"book-shelf-changer\">\n//                       <select\n//                         value={book.shelf}\n//                         onChange={(event) => handleShelfChange(event, book)}\n//                       >\n//                         <option value=\"none\" disabled>\n//                           Move to...\n//                         </option>\n//                         {shelves.map((shelf) => (\n//                           <option key={shelf.key} value={shelf.key}>\n//                             {shelf.title}\n//                           </option>\n//                         ))}\n//                         <option value=\"none\">None</option>\n//                       </select>\n//                     </div>\n//                   </div>\n//                 </div>\n//               </li>\n//             ))}\n//           </ol>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default BookSearch;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookSearch = () => {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n\n  const fetchData = value => {\n    fetch(\"https://reactnd-books-api.udacity.com\").then(response => response.json()).then(json => {\n      const results = json.filter(book => {\n        return book && book.id && book.title.toLowerCase().includes(value);\n      });\n      console.log(results);\n    });\n  };\n\n  const handleChange = value => {\n    setInput(value);\n    fetchData(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-search-page\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"close-search\",\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: input,\n          onChange: e => handleChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n\n_c = BookSearch;\nexport default BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/felipelima/Sandbox/udacity/nd0191-c1-myreads/starter/src/BookSearch.js"],"names":["useState","Link","BookSearch","input","setInput","fetchData","value","fetch","then","response","json","results","filter","book","id","title","toLowerCase","includes","console","log","handleChange","e","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAAroBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,SAAS,GAAIC,KAAD,IAAW;AAC3BC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACd,YAAMC,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAaC,IAAD,IAAU;AACpC,eAAOA,IAAI,IAAIA,IAAI,CAACC,EAAb,IAAmBD,IAAI,CAACE,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCX,KAAlC,CAA1B;AACD,OAFe,CAAhB;AAGAY,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,KAPH;AAQD,GATD;;AAUA,QAAMS,YAAY,GAAId,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACAD,IAAAA,SAAS,CAACC,KAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kCAFd;AAGE,UAAA,KAAK,EAAEH,KAHT;AAIE,UAAA,QAAQ,EAAGkB,CAAD,IAAOD,YAAY,CAACC,CAAC,CAACC,MAAF,CAAShB,KAAV;AAJ/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArCM;;GAAMJ,U;;KAAAA,U;AAsCb,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import * as BooksAPI from \"./BooksAPI\";\n\n// const BookSearch = ({ onBack }) => {\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n\n//   const handleSearchInputChange = (event) => {\n//     setSearchQuery(event.target.value);\n//   };\n\n//   const handleSearchSubmit = (event) => {\n//     event.preventDefault();\n//     // Perform book search based on searchQuery\n//     // Update search results\n//   };\n\n//   return (\n//     <div className=\"search-books\">\n//       <div className=\"search-books-bar\">\n//         <button className=\"close-search\" onClick={onBack}>\n//           Close\n//         </button>\n//         <div className=\"search-books-input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search by title, author, or ISBN\"\n//             onChange={handleSearchInputChange}\n//             value={searchQuery}\n//           />\n//           <button onClick={handleSearchSubmit}>Search</button>\n//         </div>\n//       </div>\n//       <div className=\"search-books-results\">\n//         <ol className=\"books-grid\"></ol>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookSearch;\n\n// const BookSearch = ({ handleShelfChange, shelves }) => {\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const [searchResult, setSearchResult] = useState([]);\n\n//   const onSearchQueryChange = async (event) => {\n//     const query = event.target.value;\n//     setSearchQuery(query);\n\n//     if (query.trim() === \"\") {\n//       setSearchResult([]);\n//     }\n\n//     try {\n//       const searchResults = await BooksAPI.search(query, 10);\n//       setSearchResult(searchResults);\n//     } catch (error) {\n//       console.error(\"Error searching books: \", error);\n//       setSearchResult([]);\n//     }\n//   };\n\n//   const handleSearchSubmit = (event) => {\n//     event.preventDefault();\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"search-books-bar\">\n//         <div className=\"close-search-page\">\n//           <Link to=\"/\" className=\"close-search\">\n//             close\n//           </Link>\n//         </div>\n//         <div className=\"search-books-input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search by title, author, or ISBN\"\n//             value={searchQuery}\n//             onChange={onSearchQueryChange}\n//           />\n//           <button onClick={handleSearchSubmit}>Search</button>\n//         </div>\n//         <div className=\"search-books-results\">\n//           <ol className=\"books-grid\">\n//             {searchResult.map((book) => (\n//               <li key={book.id}>\n//                 <div className=\"book\">\n//                   <div className=\"book-top\">\n//                     <div\n//                       className=\"book-cover\"\n//                       style={{\n//                         width: 128,\n//                         height: 193,\n//                         backgroundImage: `url(${book.imageLinks.thumbnail})`,\n//                       }}\n//                     ></div>\n//                     <div className=\"book-shelf-changer\">\n//                       <select\n//                         value={book.shelf}\n//                         onChange={(event) => handleShelfChange(event, book)}\n//                       >\n//                         <option value=\"none\" disabled>\n//                           Move to...\n//                         </option>\n//                         {shelves.map((shelf) => (\n//                           <option key={shelf.key} value={shelf.key}>\n//                             {shelf.title}\n//                           </option>\n//                         ))}\n//                         <option value=\"none\">None</option>\n//                       </select>\n//                     </div>\n//                   </div>\n//                 </div>\n//               </li>\n//             ))}\n//           </ol>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookSearch;\n\nexport const BookSearch = () => {\n  const [input, setInput] = useState(\"\");\n\n  const fetchData = (value) => {\n    fetch(\"https://reactnd-books-api.udacity.com\")\n      .then((response) => response.json())\n      .then((json) => {\n        const results = json.filter((book) => {\n          return book && book.id && book.title.toLowerCase().includes(value);\n        });\n        console.log(results);\n      });\n  };\n  const handleChange = (value) => {\n    setInput(value);\n    fetchData(value);\n  };\n\n  return (\n    <div>\n      <div className=\"search-books-bar\">\n        <div className=\"close-search-page\">\n          <Link to=\"/\" className=\"close-search\">\n            close\n          </Link>\n        </div>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={input}\n            onChange={(e) => handleChange(e.target.value)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BookSearch;\n"]},"metadata":{},"sourceType":"module"}