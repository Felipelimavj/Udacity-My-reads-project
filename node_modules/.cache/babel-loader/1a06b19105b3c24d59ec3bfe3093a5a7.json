{"ast":null,"code":"var _jsxFileName = \"/Users/felipelima/Sandbox/udacity/nd0191-c1-myreads/starter/src/BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\"; // const BookSearch = ({ onBack }) => {\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n//   const handleSearchInputChange = (event) => {\n//     setSearchQuery(event.target.value);\n//   };\n//   const handleSearchSubmit = (event) => {\n//     event.preventDefault();\n//     // Perform book search based on searchQuery\n//     // Update search results\n//   };\n//   return (\n//     <div className=\"search-books\">\n//       <div className=\"search-books-bar\">\n//         <button className=\"close-search\" onClick={onBack}>\n//           Close\n//         </button>\n//         <div className=\"search-books-input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search by title, author, or ISBN\"\n//             onChange={handleSearchInputChange}\n//             value={searchQuery}\n//           />\n//           <button onClick={handleSearchSubmit}>Search</button>\n//         </div>\n//       </div>\n//       <div className=\"search-books-results\">\n//         <ol className=\"books-grid\"></ol>\n//       </div>\n//     </div>\n//   );\n// };\n// export default BookSearch;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookSearch = ({\n  handleShelfChange,\n  shelves\n}) => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n\n  const onSearchQueryChange = async event => {\n    const query = event.target.value;\n    setSearchQuery(query);\n\n    if (query.trim() === \"\") {\n      setSearchResult([]);\n    }\n\n    try {\n      const searchResults = await BooksAPI.search(query, 10);\n      setSearchResult(searchResults);\n    } catch (error) {\n      console.error(\"Error searching books: \", error);\n      setSearchResult([]);\n    }\n  }; // const handleSearchSubmit = (event) => {\n  //   event.preventDefault();\n  // };\n\n\n  console.log(setSearchQuery);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-search-page\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"close-search\",\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          id: \"search-books-input-wrapper\",\n          value: searchQuery,\n          onChange: onSearchQueryChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: searchResult.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"book\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"book-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"book-cover\",\n                  style: {\n                    width: 128,\n                    height: 193,\n                    backgroundImage: `url(${book.imageLinks.thumbnail})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"book-shelf-changer\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: book.shelf,\n                    onChange: event => handleShelfChange(event, book),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"none\",\n                      disabled: true,\n                      children: \"Move to...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, this), shelves.map(shelf => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: shelf.key,\n                      children: shelf.title\n                    }, shelf.key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 27\n                    }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"none\",\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"fN6euig6xStHS/Ic0eYCyTI+STw=\");\n\n_c = BookSearch;\nexport default BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/felipelima/Sandbox/udacity/nd0191-c1-myreads/starter/src/BookSearch.js"],"names":["useState","Link","BooksAPI","BookSearch","handleShelfChange","shelves","searchQuery","setSearchQuery","searchResult","setSearchResult","onSearchQueryChange","event","query","target","value","trim","searchResults","search","error","console","log","map","book","width","height","backgroundImage","imageLinks","thumbnail","shelf","key","title","id"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\n\n// const BookSearch = ({ onBack }) => {\n//   const [searchQuery, setSearchQuery] = useState(\"\");\n\n//   const handleSearchInputChange = (event) => {\n//     setSearchQuery(event.target.value);\n//   };\n\n//   const handleSearchSubmit = (event) => {\n//     event.preventDefault();\n//     // Perform book search based on searchQuery\n//     // Update search results\n//   };\n\n//   return (\n//     <div className=\"search-books\">\n//       <div className=\"search-books-bar\">\n//         <button className=\"close-search\" onClick={onBack}>\n//           Close\n//         </button>\n//         <div className=\"search-books-input-wrapper\">\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search by title, author, or ISBN\"\n//             onChange={handleSearchInputChange}\n//             value={searchQuery}\n//           />\n//           <button onClick={handleSearchSubmit}>Search</button>\n//         </div>\n//       </div>\n//       <div className=\"search-books-results\">\n//         <ol className=\"books-grid\"></ol>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookSearch;\n\nconst BookSearch = ({ handleShelfChange, shelves }) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n\n  const onSearchQueryChange = async (event) => {\n    const query = event.target.value;\n    setSearchQuery(query);\n\n    if (query.trim() === \"\") {\n      setSearchResult([]);\n    }\n\n    try {\n      const searchResults = await BooksAPI.search(query, 10);\n      setSearchResult(searchResults);\n    } catch (error) {\n      console.error(\"Error searching books: \", error);\n      setSearchResult([]);\n    }\n  };\n\n  // const handleSearchSubmit = (event) => {\n  //   event.preventDefault();\n  // };\n  console.log(setSearchQuery);\n  return (\n    <div>\n      <div className=\"search-books-bar\">\n        <div className=\"close-search-page\">\n          <Link to=\"/\" className=\"close-search\">\n            close\n          </Link>\n        </div>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            id=\"search-books-input-wrapper\"\n            value={searchQuery}\n            onChange={onSearchQueryChange}\n          />\n          {/* <button onClick={handleSearchSubmit}>Search</button> */}\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {searchResult.map((book) => (\n              <li key={book.id}>\n                <div className=\"book\">\n                  <div className=\"book-top\">\n                    <div\n                      className=\"book-cover\"\n                      style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage: `url(${book.imageLinks.thumbnail})`,\n                      }}\n                    ></div>\n                    <div className=\"book-shelf-changer\">\n                      <select\n                        value={book.shelf}\n                        onChange={(event) => handleShelfChange(event, book)}\n                      >\n                        <option value=\"none\" disabled>\n                          Move to...\n                        </option>\n                        {shelves.map((shelf) => (\n                          <option key={shelf.key} value={shelf.key}>\n                            {shelf.title}\n                          </option>\n                        ))}\n                        <option value=\"none\">None</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookSearch;\n"]},"metadata":{},"sourceType":"module"}